(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{568:function(t,s,a){"use strict";a.r(s);var n=a(58),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("ol",[a("li",[a("p",[t._v("try catch的捕获异常机制 - _catch_对象会被添加到作用域链的最前端，在活动对象和全局对象之前")])]),t._v(" "),a("li",[a("p",[t._v("怎么理解JS中的循环语句，c/c++中循环结束会被销毁，但是JS中的循环无法创建本地上下文？？？")]),t._v(" "),a("ol",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" k "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 尽管循环已经结束，但是变量“k”仍然在作用域中")]),t._v("\n")])])])]),t._v(" "),a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li")])])]),t._v(" "),a("h4",{attrs:{id:"js中遍历对象的属性的几个方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中遍历对象的属性的几个方法"}},[t._v("#")]),t._v(" JS中遍历对象的属性的几个方法")]),t._v(" "),a("ul",[a("li",[t._v("Object.keys() 、Object.values()、Object.entries()  : 都是返回一个给定对象自身可枚举属性的键值对数组")]),t._v(" "),a("li",[t._v("for(var key in obj): 不仅可以循环枚举自身可枚举属性还可以枚举原型链中的可枚举属性")]),t._v(" "),a("li",[t._v("for (let [key, value] of Object.entries(meals)) {  console.log(key + ':' + value); } : 既可以遍历数组也可以遍历对象")]),t._v(" "),a("li",[t._v("1.遍历自身可枚举的属性 (可枚举，非继承属性) "),a("strong",[t._v("Object.keys()")]),t._v(" 方法")]),t._v(" "),a("li",[t._v("2.遍历自身的所有属性(可枚举，不可枚举，非继承属性) **Object.getOwnPropertyNames()**方法")]),t._v(" "),a("li",[t._v("3.遍历可枚举的自身属性和继承属性 （可枚举，可继承的属性） "),a("strong",[t._v("for in")])]),t._v(" "),a("li",[t._v("4.遍历所有的自身属性和继承属性")])]),t._v(" "),a("h3",{attrs:{id:"js-中的事件模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-中的事件模型"}},[t._v("#")]),t._v(" JS 中的事件模型")]),t._v(" "),a("p",[t._v("参考： https://www.cnblogs.com/leftJS/p/10948138.html")])])}),[],!1,null,null,null);s.default=e.exports}}]);