(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{562:function(t,s,a){"use strict";a.r(s);var n=a(58),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("掘金： https://juejin.im/post/5e5f52fce51d4526ea7efdec")]),t._v(" "),a("p",[t._v("简书：https://segmentfault.com/a/1190000018428848?utm_source=tag-newest")]),t._v(" "),a("p",[t._v("知乎：https://zhuanlan.zhihu.com/p/42377418")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5b2f02cd5188252b937548ab",target:"_blank",rel:"noopener noreferrer"}},[t._v("史上最详细的手写Promise教程"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("规范在哪里找")]),t._v(" "),a("p",[t._v("源码在哪里看")]),t._v(" "),a("h1",{attrs:{id:"【promise的前世今生系列】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【promise的前世今生系列】"}},[t._v("#")]),t._v(" 【promise的前世今生系列】")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("面试必问的几个问题")]),t._v(" "),a("ul",[a("li",[t._v("promise是什么，怎么理解")]),t._v(" "),a("li",[t._v("自己写一个")]),t._v(" "),a("li",[t._v("promise的执行顺序")])])]),t._v(" "),a("li",[a("p",[t._v("社区解决方案 - Q、when、jQuery-Deffered")])]),t._v(" "),a("li",[a("p",[t._v("官方化 - Promise/A+")])]),t._v(" "),a("li",[a("p",[t._v("Generator、async/await")])]),t._v(" "),a("li",[a("p",[t._v("实战篇 - 人人能搞懂的promise执行顺序")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("透过原理看执行顺序")])]),t._v(" "),a("li",[a("p",[t._v("https://juejin.im/post/5dabf847e51d4524d674881c")])]),t._v(" "),a("li",[a("p",[t._v("https://juejin.im/post/5dad3405f265da5bb252ff32")])]),t._v(" "),a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 外部promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 外部第一个then"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 内部promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 内部第一个then"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 内部第二个then"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 外部第二个then"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 答案")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 外部promise\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 外部第一个then\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 内部promise\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 内部第一个then\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 外部第二个then\nlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 内部第二个then\n")])])])]),t._v(" "),a("li"),t._v(" "),a("li",[a("p",[t._v("执行顺序的辨别方式")])])])])]),t._v(" "),a("p",[t._v("本文将采用追溯法，带你追根溯源的了解前端是如何从异步编程的噩梦中逃脱出来，如今可以使用同步的方式来编写异步的代码")]),t._v(" "),a("h3",{attrs:{id:"人人都能懂的promise原理剖析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#人人都能懂的promise原理剖析"}},[t._v("#")]),t._v(" 人人都能懂的Promise原理剖析")]),t._v(" "),a("h4",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("js无法避开异步编程，业务复杂起来，就会出现回调地狱。问题有两个：1.异步编程不顺应正常人的习惯，不直观，不容易理解；2.维护困难")]),t._v(" "),a("p",[t._v("promise解决的是异步编码风格的问题。")]),t._v(" "),a("h3",{attrs:{id:"追溯法看promise发展的心路历程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#追溯法看promise发展的心路历程"}},[t._v("#")]),t._v(" 追溯法看Promise发展的心路历程")]),t._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("promise")]),t._v("是异步编程的一种解决方案。所谓Promise，简单来说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作）的结果。从语法上来说，"),a("code",[t._v("promise")]),t._v("是一个对象，从它可以获取异步操作的消息")])]),t._v(" "),a("h5",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[t._v("对象的状态不受外界影响")]),t._v(" "),a("li",[t._v("一旦状态改变就不会再变，任何时候都可以得到这个结果")])]),t._v(" "),a("h5",{attrs:{id:"基础用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础用法"}},[t._v("#")]),t._v(" 基础用法")]),t._v(" "),a("p",[t._v("这里只是简单介绍用法，详细使用请移步阮一峰老师的"),a("a",{attrs:{href:"https://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("es6入门"),a("OutboundLink")],1),t._v("，")]),t._v(" "),a("p",[t._v("API：")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("Promise.prototype.then()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.prototype.catch()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.all()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.race()")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.resolve()")])]),t._v(" "),a("ul",[a("li",[a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"log: 外部promise"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 解释")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写法1等同于写法2，都是直接返回一个resolved状态的 Promise 对象")]),t._v("\n")])])])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("Promise.reject()")])])])]),t._v(" "),a("h3",{attrs:{id:"各种不同的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#各种不同的实现"}},[t._v("#")]),t._v(" 各种不同的实现")]),t._v(" "),a("ul",[a("li",[t._v("jQuery中的 deffered")]),t._v(" "),a("li",[t._v("Q")]),t._v(" "),a("li",[t._v("when")]),t._v(" "),a("li",[t._v("Iterator Generator\n"),a("ul",[a("li",[t._v("由于生成器支持在函数中暂停代码执行,因而可以深入挖掘异步处理的更多用法。如果需要嵌套回调化序列化一系列的异步操作,事情会变得非常复杂。此时,生成器和yield语句就派上用场了。")])])])]),t._v(" "),a("h3",{attrs:{id:"链式调用原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#链式调用原理"}},[t._v("#")]),t._v(" 链式调用原理")]),t._v(" "),a("p",[t._v("参考： "),a("a",{attrs:{href:"https://juejin.im/post/5e34ec75e51d4557e86e9dff",target:"_blank",rel:"noopener noreferrer"}},[t._v("promise的链式调用原理"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5ecbdfe6e51d45784960ab2b",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解promise调用过程"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.im/post/5e9948636fb9a03c8122cbad",target:"_blank",rel:"noopener noreferrer"}},[t._v("promise链式调用"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"特点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点-2"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ol",[a("li",[t._v("通过回调函数延迟绑定")]),t._v(" "),a("li",[t._v("回调函数返回值穿透的技术，解决了循环嵌套")]),t._v(" "),a("li",[t._v("Promise 对象的错误具有“冒 泡”性质，会一直向后传递，直到被 onReject 函数处理或 catch 语句捕获为止。具备了这 样“冒泡”的特性后，就不需要在每个 Promise 对象中单独捕获异常了")])]),t._v(" "),a("h3",{attrs:{id:"核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心"}},[t._v("#")]),t._v(" 核心")]),t._v(" "),a("p",[t._v("Chrome内部实现promise过程中使用了微任务来延迟绑定回调函数，所以使用了promise就会创建一个微任务")]),t._v(" "),a("h3",{attrs:{id:"问题点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题点"}},[t._v("#")]),t._v(" 问题点")]),t._v(" "),a("ol",[a("li",[t._v("Promise 中为什么要引入微任务?")]),t._v(" "),a("li",[t._v("Promise 中是如何实现回调函数返回值穿透的?")]),t._v(" "),a("li",[t._v("Promise 出错后，是怎么通过“冒泡”传递给最后那个捕获异常的函数?")])]),t._v(" "),a("p",[t._v("准确地说，Promise在执行resolve或者reject时，触发微任务，所以在Promise的executor函数 中调用xmlhttprequest会触发宏任务。如果xmlhttprequest请求成功了，通过resolve触发微任务")]),t._v(" "),a("h3",{attrs:{id:"究极进化-async-await的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#究极进化-async-await的实现"}},[t._v("#")]),t._v(" 究极进化 - async/await的实现")]),t._v(" "),a("p",[a("strong",[t._v("ES7 引入了 async/await，这是 JavaScript 异步编程的一个重大改进，提 供了在不阻塞主线程的情况下使用同步代码实现异步访问资源的能力，并且使得代码逻辑更 加清晰")])]),t._v(" "),a("h4",{attrs:{id:"生成器函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成器函数"}},[t._v("#")]),t._v(" 生成器函数")]),t._v(" "),a("p",[t._v("可以暂停和恢复")]),t._v(" "),a("h4",{attrs:{id:"协程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协程"}},[t._v("#")]),t._v(" 协程")]),t._v(" "),a("p",[a("strong",[t._v("一种比线程更加轻量级 的存在")])])])}),[],!1,null,null,null);s.default=e.exports}}]);